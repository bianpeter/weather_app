{"version":3,"sources":["components/fetch.js","components/FavCity/FavCity.jsx","components/MainCities/MainCities.jsx","components/Output/Output.jsx","components/DateBuild/DateBuild.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","initUrl","useState","url","setUrl","undefined","data","setData","useEffect","fetch","then","response","status","json","useWeather","city","weather","FavCity","change","className","htmlFor","name","id","onChange","value","MainCities","mainCities","placeholder","list","onKeyDown","map","option","geonameid","Output","cityOut","inputValue","Math","round","main","temp","humidity","DateBuild","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","App","dropDownCity","setDropDownCity","favCity","dataListCity","setDataListCity","mainCity","cities","listInputValue","setListInputValue","event","target","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e316e6ab.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (initUrl) => {\r\n  const [url, setUrl] = useState(initUrl);\r\n  const [data, setData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) return;\r\n        return response.json();\r\n      })\r\n      .then((json) => setData(json));\r\n  }, [url]);\r\n\r\n  return [data, setUrl];\r\n};\r\n\r\nexport const useWeather = (city = \"London\") => {\r\n  const [weather, setUrl] = useFetch(\r\n    `https://api.openweathermap.org/data/2.5/find?q=${city}&units=metric&appid=7cf1f1b47542d9ecccf08ca82e87ec23`\r\n  );\r\n  useEffect(() => {\r\n    setUrl(\r\n      `https://api.openweathermap.org/data/2.5/find?q=${city}&units=metric&appid=7cf1f1b47542d9ecccf08ca82e87ec23`\r\n    );\r\n  }, [city]);\r\n  return weather === undefined ? \"Loading...\" : weather;\r\n};\r\n","\r\n\r\nfunction FavCity({change}) {\r\n  \r\n  return (\r\n    <div>\r\n      <h2 className=\"fav-h2\">Favorite Cities</h2>\r\n      <div className=\"cities-container\">\r\n        <label htmlFor=\"cities\">Choose a city: </label>\r\n        <select name=\"cities\" id=\"cities\" onChange={change}>\r\n          <option value=\"Budapest\">Budapest</option>\r\n          <option value=\"Batman\">Batman</option>\r\n          <option value=\"Bugyi\">Bugyi</option>\r\n          <option value=\"Sonkád\">Sonkád</option>\r\n          <option value=\"Makkoshotyka\">Makkoshotyka</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FavCity;\r\n","import React from 'react'\r\n\r\nfunction MainCities({change,mainCities }) {\r\n  return (\r\n    <div>\r\n      <h2 className=\"main-h2\">City List</h2>\r\n      <label className=\"main-label\" htmlFor=\"cityList\"></label>\r\n      <input placeholder=\"Write or Select a City\" list=\"listOfCities\" id=\"cityList\" onKeyDown={change} />\r\n\r\n      <datalist id=\"listOfCities\">\r\n        {mainCities.map((option) => (\r\n          <option key={option.geonameid} value={option.name}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </datalist>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainCities\r\n","import React from 'react'\r\n\r\nfunction Output({cityOut, inputValue}) {\r\n  return (\r\n    <div className=\"output-container\">\r\n      {cityOut === \"Loading...\" || inputValue === \"\" || cityOut.list[0] === undefined ? (\r\n          <h2 className=\"\">Press Enter</h2>\r\n        ) : (\r\n          <div className=\"output\">\r\n            <h3 className=\"temp\"> {Math.round(cityOut.list[0].main.temp)} ℃ </h3>\r\n            <h3> {cityOut.list[0].weather[0].main}</h3>\r\n            <h3> Humidity: {cityOut.list[0].main.humidity}%</h3>\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Output\r\n","import React from 'react'\r\n\r\nfunction DateBuild () {\r\n\r\n  const dateBuilder = (d) => {\r\n    \r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  \r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n  \r\n    return `${day} ${date} ${month} ${year}`\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <h2 className=\"app-h2\">{dateBuilder(new Date())}</h2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DateBuild;\r\n","import \"./scss/main.scss\";\r\nimport { useState } from \"react\";\r\nimport { useWeather } from \"./components/fetch\";\r\nimport data from \"./data/betterCityList.json\";\r\nimport FavCity from \"./components/FavCity/FavCity\";\r\nimport MainCities from \"./components/MainCities/MainCities\";\r\nimport Output from \"./components/Output/Output\";\r\nimport DateBuild from \"./components/DateBuild/DateBuild\";\r\n\r\nfunction App() {\r\n  const [dropDownCity, setDropDownCity] = useState();\r\n  const favCity = useWeather(dropDownCity);\r\n  const [dataListCity, setDataListCity] = useState(\"London\");\r\n  const mainCity = useWeather(dataListCity);\r\n  const cities = data;\r\n  const [listInputValue, setListInputValue] = useState(\"\");\r\n\r\n  const changeDropDownCity = (event) => {\r\n    setDropDownCity(event.target.value);\r\n  };\r\n\r\n  const changeDataListCity = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      setDataListCity(event.target.value);\r\n      setListInputValue(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"app-h1\">Weather App</h1>\r\n      <DateBuild />\r\n      <div className=\"container\">\r\n        <div className=\"fav-container\">\r\n          <FavCity change={changeDropDownCity} />\r\n          <Output cityOut={favCity} inputValue={\".\"} />\r\n        </div>\r\n        <div className=\"main-container\">\r\n          <MainCities change={changeDataListCity} mainCities={cities} />\r\n          <Output cityOut={mainCity} inputValue={listInputValue} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}